%article.message.is-warning
  %p.message-body
    On this page, you can edit all of the information that appears about your hub on the
    %a{href: 'https://sunrisemovement.org/hubs', target: '_blank'} Sunrise movement hub map!

%h1.title Edit Hub Information for #{@hub.location}

%form{action: '/hub', method: 'POST'}
  %fieldset
    .columns
      .column
        %h2.subtitle Basic Info
        .field
          %label.label Hub Name
          .control
            %input.input{name: 'Name', value: @hub['Name']}

        .field
          %label.label Is your hub active?
          .control
            .select
              %select{name: "Activity?"}
                - [["Active", "Yes, we're active!"],["Semi-Active","We're semi-active."],["Inactive","We're inactive, hide us for now :("]].each do |value,label|
                  %option{value: value, selected: @hub.fields["Activity?"]==value}= label

        .field
          %label.label What contact info should we show on the map?
          .control
            .select
              %select{name: "Contact Type", id: 'contact-type'}
                %option{value: 'Hub Email'} Hub email!
                %option{value: 'Coordinator Emails'} Coordinator emails!
                %option{value: 'Hub Email + Coordinator Emails'} Both hub and coordinator emails
                %option{value: 'Custom Text'} Custom text (enter below)
        .field{id: 'cust-contact-text'}
          %label.label Custom contact text
          .control
            %input.input{name: 'Custom Map Contact Text', value: @hub['Custom Map Contact Text'], id: 'cust-contact-input'}
        .field
          %label.label Custom email
          .control
            %input.input{name: 'Custom Map Email', value: @hub['Custom Map Email'], placeholder: @hub['Email']}
            %p.help By default we display hubs' main contact emails, but if you have a welcome email for newcomers, we can display that instead.

      .column
        %h2.subtitle Map Links
        .field

        - ['Facebook Handle', 'Twitter Handle', 'Instagram Handle', 'Website'].each do |field|
          .field
            %label.label= field
            .control
              %input.input{name: field, value: @hub[field]}
        .field
          %label.label Website Link Text
          .control
            %input.input{name: 'Custom Website Link Text', value: @hub['Custom Website Link Text'], placeholder: 'Hub Website'}
            %p.help If you enter something here, it will show up instead of "Hub Website" as the link text on the map.
      .column
        %h2.subtitle Pin Location
        - ['Latitude', 'Longitude'].each do |field|
          .field
            %label.label= field
            .control
              %input.input{name: field, placeholder: field, id: field, value: @hub.fields[field]}
            - if field == 'Longitude'
              %p.help
                Google has
                %a{href: 'https://support.google.com/maps/answer/18539', target: '_blank'}
                  helpful instructions
                for finding these!
        .field
          %label.label
            Where that is
          .control
            %iframe#map-iframe{src: "https://maps.google.com/maps/embed/v1/place?q=#{@hub.fields['Latitude']},#{@hub.fields['Longitude']}&key=#{ENV['GOOGLE_MAPS_API_KEY']}", style: "width: 100%; min-height: 200px", :"data-key" => ENV['GOOGLE_MAPS_API_KEY'] }

  %br
  %input.button.is-warning{type: 'submit', value: 'Update Hub Information'}

  %hr

%form{action: '/leaders', method: 'POST'}
  %fieldset
    .columns
      .column
        %h2.title Manage Leaders
        %p
          In this section, you can manage information for everyone who has filled out the
          %a{href: "#{ENV['HUB_LEADER_FORM']}", target: '_blank'} hub leader form
          for #{@hub['Name']}&mdash;in particular, you can confirm leaders' activity in the hub,
          ensure names and emails are correct,
          and decide who should be shown on the map (if you are not just displaying the hub contact email).
        %br
        %p
          For our initial beta-test of this system, we are not yet supporting
          fully featured editing (e.g. of names, roles, and contact
          information). If you need to make those kinds of edits, you can email
          us at
          %a{href: "mailto:#{ENV['GMAIL_USER']}"}= ENV['GMAIL_USER']
          or you can mark the leader as inactive and have them fill out a second copy of the leader form.
        %br
        %table.table.is-bordered.is-striped.is-fullwidth.is-responsive
          %thead
            %tr
              %th First Name
              %th Last Name
              %th Email
              %th Roles
              %th Hub Activity
              %th Map Visibility
          %tbody
            - @hub.leaders.each do |lead|
              %tr
                %td
                  %input.input.is-small{name: "leaders[#{lead.id}][First Name]", value: lead['First Name']}
                %td
                  %input.input.is-small{name: "leaders[#{lead.id}][Last Name]", value: lead['Last Name']}
                %td
                  %input.input.is-small{name: "leaders[#{lead.id}][Email]", value: lead['Email'], type: 'email'}
                %td
                  - (lead['Role'] || []).each do |role|
                    %span.tag= role.gsub(' - Self Describe In Next Field', '')
                %td
                  %label.checkbox
                    %input{type: 'checkbox', name: "leaders[#{lead.id}][Activity?]", checked: lead['Activity?']}
                    Active member
                %td
                  %label.checkbox
                    %input{type: 'checkbox', name: "leaders[#{lead.id}][Map?]", checked: lead['Map?']}
                    Allow on map

  %br
  %input.button.is-warning{type: 'submit', value: 'Update Leader Information'}

:css
  .hidden { display: none; }

:javascript
  const latInput = document.getElementById('Latitude');
  const lngInput = document.getElementById('Longitude');
  const mapIframe = document.getElementById('map-iframe');
  const reloadBtn = document.getElementById('reload-map');
  const custInput = document.getElementById('cust-contact-input');
  const contType = document.getElementById('contact-type');
  const custText = document.getElementById('cust-contact-text');

  const key = mapIframe.attributes['data-key'].value;

  const resetMap = () => {
    mapIframe.setAttribute("src", `https://maps.google.com/maps/embed/v1/place?q=${latInput.value},${lngInput.value}&key=${key}`);
  };

  latInput.oninput = resetMap;
  lngInput.oninput = resetMap;

  const toggleCustText = () => {
    if (contType.value == 'Custom Text') {
      custInput.removeAttribute("disabled");
    } else {
      custInput.setAttribute("disabled", "disabled");
    }
  };

  contType.onchange = toggleCustText;
  toggleCustText();

